@model ap1.Models.Event

@{
    ViewBag.Title = "EditEvent";
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
}

<div class="col-md-10">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EventId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                @Html.ValidationMessage("NameExist", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, ViewBag.TypyWydarzen as SelectList, new { htmlAttributes = new { @class = "d-inline form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Localization, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.Localization, ViewBag.Miasta as SelectList, new { htmlAttributes = new { @class = "d-inline form-control" } })

                @Html.ValidationMessageFor(model => model.Localization, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedTicketAmount, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpectedTicketAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpectedTicketAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxTicketAmountForOnePerson, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxTicketAmountForOnePerson, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxTicketAmountForOnePerson, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-secondary" />
            </div>
        </div>
    </div>
    }

    

</div>
