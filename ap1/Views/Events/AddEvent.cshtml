@model ap1.Models.Event

@{
    ViewBag.Title = "AddEvent";
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
}




<div class="col-md-10">

    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        if (ViewBag.Message != null)
        {
            <div class="alert alert-success">
                <strong>Sukces!! </strong>@ViewBag.Message
            </div>
            
        }

    }

    else
    {


        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("NameExist", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Type, ViewBag.TypyWydarzen as SelectList, new { htmlAttributes = new { @class = "d-inline form-control" } })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Localization, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Localization, ViewBag.Miasta as SelectList, new { htmlAttributes = new { @class = "d-inline form-control" } })
                        @Html.ValidationMessageFor(model => model.Localization, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessage("ToErly", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.ExpectedTicketAmount, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ExpectedTicketAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExpectedTicketAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaxTicketAmountForOnePerson, htmlAttributes: new { @class = "d-inline control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxTicketAmountForOnePerson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaxTicketAmountForOnePerson, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Utwórz" class="btn btn-secondary" />
                    </div>
                </div>
            </div>
        }

    }

    </div>
